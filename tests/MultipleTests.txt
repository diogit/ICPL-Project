

6;;

true;;

false;;

fun x:int -> 6 end;;

fun x:int -> 6 end(5);;

fun x:int, y:int -> 6 end(5, 5);;

fun x:int, y:int, z:int -> 6 end(5, 5, 5);;

new 6;;

!new 6;;

new 3 := 6;;



	
5;6;;

(6);;

3+3;;

8-2;;

3*2;;

12/2;;

-6;;


	

6 == 6;;

6 == 3;;

6 > 6;;

6 > 7;;

6 > 5;;

6 >= 6;;

6 >= 7;;

6 >= 5;;

6 < 6;;

6 < 7;;

6 < 5;;

6 <= 6;;

6 <= 7;;

6 <= 5;;

	

~true;;

~false;;

true || true;;

true || false;;

false || true;;

false || false;;

true && true;;

true && false;;

false && true;;

false && false;;

--6;;

---6;;

----6;;

2--4;;

8+-2;;





let x:int = 6 in 6 end;;

let x:int = 6 in x end;;

let x:int = 6 y:int = 7 in x end;; 

let x:int = 6 in 
	let y:int = 7 in x end end ;;

let x:int = 7 
	in let x:int = 6 in x end end ;;

let x:int = let y:int = 7 in y end
	in let y:int = 6 in y end end ;;




if true then 6
else 7 end;;

if false then 7
else 6 end;;




while false do
	true
end;;

let x:cell(int) = new 1 in
	while !x > 0 do
		x:=0; 6 end end;;




true && false; true;;

false ; true && true;;

3 == 3 && true;;

15 + 3 * -3;;

let x:int = 3 in x end * 2;;

let x:int = 3 in x * 2 end;;

-3 * -2;;

-(true; -6);;

~(3; false);;

!new 3 * 2;;




(0; true) && (1; true);; 

(true; 0) == (true; 0);; 

(true; 3) + (true; 3);;

(true; 3) * (true; 2);;

if false; true then false; 6 else false;false end;;

while 1; false do true end;;

let x:cell(int) = new 1 in
	while false; !x > 0 do
		x:=0; 6 end end;;

let x:cell(int) = new 3 in
	x := 4 > 3; 
	if !x then 6 else 0 end end;;

!(new 6);;

let x:cell((int)cell((int)int)) = false; new fun x:int -> new fun y:int -> x + y end end in false;!(!x(2))end(4);;

fun x:int -> false;3 ;6 end(4);;

fun x:int -> x end(3;4;5;6);;

fun x:int, y:int -> x + y end (false;false;2,false;true;4);;

let a:int = let a:int = 3 b:int = 2 in a + b end b:int = 1 in a + b end;;

let a:int = 1 b:int = 2 in let c:int = 3 in a + b + c end end;;

let f:()int = fun -> 6 end in f() end;;

let f:(int)int = fun x:int -> 3 + x end in f(3) end;;

let f:(int,int)int = fun x:int,y:int -> x + y end in f(2,4) end ;;

let f:((int)int,int)int = fun x:(int)int,y:int -> x(y) end 
    g:(int)int = fun x:int -> x + 1 end
in f(g,5) end ;;

let     f:((int)int,int)int = fun x:(int)int,y:int -> x(y*2) end 
    g:(int)int = fun x:int -> x + 2 end
in f(g,2) end ;;

let f:(int)int = fun x:int -> 2 * x end
in f end(3);;

2 + let f:(int)int = fun x:int -> 2 * x end in f end(2);;


17717;;

let x:int = new 5 := 6 in x end;;



let f:(int,int)int = fun x:int, y:int -> x+y end a:cell(int)=new 3 in f(a := 2; !a, a:= 4; !a) end;;

!let x:cell(int) = new 3 in x := 6; x end;;

let x:cell(int) = new 1 in while !x > 0 do x:=0; 6 end end;;

let x:cell((int,int)int) = new fun x:int, y:int -> x+y end in
!x(2,4)
end;;

!let x:cell(int) = new 4 in
x:= 6; x
end;;



let x:cell(int) = (new 5) f:(int)int = fun b:int -> b+1 end  in 3 < f(!x * (2+7)) end;;
let x:cell(int) = (new 5) f:(int)int = fun b:int -> b+1 end  in 3 > f(!x * (2+7)) end;;
let x:cell(int) = (new 5) f:(int)int = fun b:int -> b+1 end  in 3 end;;
let x:cell(int) = (new 5) f:(int)int = fun b:int -> b+1 end  in f(!x * (2+7)) end;;
3 == 3 && true;;
!new 3 * 2;;
let x:cell((int)cell((int)int)) = false; new fun x:int -> new fun y:int -> x + y end end in false;!(!x(2))end(4);;
let f:()int = fun -> 6 end in f() end;;
let x:cell((int,int)int) = new fun x:int, y:int -> x+y end in !x(2,4) end;;
let x:cell(int) = new 1 in while !x < 10 do x := !x+1 end end;;
let x:cell(int) = (new 5) f:(int)int = fun b:int -> b+1 end  in 3 < f(!x * (2+7)) end;;


3 == 3 && true;;

!new 3 * 2;;

let x:cell((int)cell((int)int)) = false; new fun x:int -> new fun y:int -> x + y end end in false;!(!x(2))end(4);;

let f:()int = fun -> 6 end in f() end;;

let x:cell((int,int)int) = new fun x:int, y:int -> x+y end in !x(2,4) end;;


let x:cell(int) = new 1 in while !x < 10 do x := !x+1 end end;;
let x:cell(int) = (new 5) f:(int)int = fun b:int -> b+1 end  in 3 < f(!x * (2+7)) end;;

(new 3) := 6;;

let a:cell(int) = new 5 in a := !a + 1; !a end;;

let x:cell(int) = new 10
	s:cell(int) = new 0 in
while !x>0 do
	s := !s + !x; x:= !x-1
end; !s
end;;

let f:(int,int)int = fun n:int,b:int->
		let
		  x:cell(int) = new n
		  s:cell(int) = new b
		in
			while !x>0 do
			  s := !s + !x; x := !x-1
			end;
			!s
		end
	end
in f(10,0)+f(100,20)
end;;
